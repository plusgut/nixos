format = """
$username\
$hostname\
$directory\
$git_branch\
$git_commit\
$git_state\
$git_metrics\
$git_status\
$character"""

right_format = """
$package\
$haskell\
$nodejs\
$rust\
${custom.nix_flake}\
$env_var\
$cmd_duration\
$jobs\
$status\
${env_var.DIRPREVARROW}
${env_var.DIRNEXTARROW}
"""

add_newline = false

[username]
format = '[$user]($style)@'

[directory]
truncate_to_repo = false

[cmd_duration]
format = '[⏱ $duration]($style) '

[git_branch]
format = '[$symbol$branch]($style)'

[git_status]
format = '([$all_status$ahead_behind]($style)) '

[haskell]
format = '[$symbol]($style)'

[nodejs]
format = '[$symbol]($style)'

[package]
format = '[$symbol$version]($style) '

[rust]
format = '[$symbol]($style)'

[custom.nix_flake]
detect_files = ['flake.lock']
format = '[$symbol$output]($style) '
style = 'bold blue'
symbol = '󱄅 '
command = 'cat flake.lock | jq ".nodes.nixpkgs?.locked.lastModified" | duration'

[custom.dirprev]
format = '[$output]($style)'
when = true
shell = 'sh'
# command = '''
	# if test -n "$dirprev";
	# 	echo 󰜱;
	# else;
	# 	echo 󰧀;
	# end;

	# if test -n "$dirprev";
	# 	echo 󰜱;
	# else;
	# 	echo 󰧀;
	# end;
	# '''
# command = 'if [ -n "$dirprev" ]; then echo 󰜱 ; else echo 󰧀 ; fi'
command = 'if [ -n "$dirnext" ]; then echo 󰜱 ; else echo 󰧀 ; fi'


[env_var.DIRPREVARROW]
style = 'green'
format = '[$env_value]($style) '

[env_var.DIRNEXTARROW]
style = 'green'
format = '[$env_value]($style) '
