require-module kitty
require-module fzf

enable-auto-pairs

colorscheme nord
add-highlighter global/ number-lines
add-highlighter global/ show-matching
add-highlighter global/ show-whitespaces
#add-highlighter window/git-diff flag-lines Default git_diff_flags

map global normal <c-n> ':new<ret>'
map global normal <c-t> ":kitty-terminal-tab kak -c %val{session}<ret>"
map global normal <c-p> ':fzf-mode<ret>f<ret>'

set-option global fzf_preview false
set-option global fzf_terminal_command 'kitty-terminal-overlay kak -c %val{session} -e "%arg{@}"'
set-option global kitty_window_type "os-window"

hook global InsertCompletionShow .* %{
  map window insert <tab> <c-n>
  map window insert <s-tab> <c-p>
}

hook global InsertCompletionHide .* %{
  unmap window insert <tab> <c-n>
  unmap window insert <s-tab> <c-p>
}

eval %sh{kak-lsp --kakoune -s $kak_session}  # Not needed if you load it with plug.kak.
lsp-enable
lsp-inlay-hints-enable global

hook global WinSetOption filetype=<language> %{
  hook window -group semantic-tokens BufReload .* lsp-semantic-tokens
  hook window -group semantic-tokens NormalIdle .* lsp-semantic-tokens
  hook window -group semantic-tokens InsertIdle .* lsp-semantic-tokens
  hook -once -always window WinSetOption filetype=.* %{
    remove-hooks window semantic-tokens
  }
}

lsp-inlay-diagnostics-enable global

# Use system's clipboard
hook global NormalKey y|d|c %{ nop %sh{
  printf %s "$kak_main_reg_dquote" | wl-copy > /dev/null 2>&1 &
}}

#define-command -override -hidden lsp-show-error -params 1 -docstring "Render error" %{
#  nop %sh{kitty @ set-tab-color active_bg=red inactive_bg=darkred}
#}

define-command kitty-terminal-overlay -params 1.. -docstring '
kitty-terminal-tab <program> [<arguments>]: create a new terminal as kitty tab
The program passed as argument will be executed in the new terminal' \
%{
    nop %sh{
        match=""
        if [ -n "$kak_client_env_KITTY_WINDOW_ID" ]; then
            match="--match=id:$kak_client_env_KITTY_WINDOW_ID"
        fi
        listen=""
        if [ -n "$kak_client_env_KITTY_LISTEN_ON" ]; then
            listen="--to=$kak_client_env_KITTY_LISTEN_ON"
        fi
        kitty @ $listen launch --no-response --type=overlay --cwd="$PWD" $match "$@"
    }
}

