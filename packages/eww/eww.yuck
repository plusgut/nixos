(defwidget bar []
  (centerbox :class "bar" :orientation "h"
    (workspaces)
    (windows)
    (sidestuff)))

(defwidget sidestuff []
  (box :class "sidestuff" :orientation "h" :space-evenly false :halign "end" :spacing 10
    "${volume <= 0 ? "ğŸ”‡" : volume <= 50 ? "ğŸ”ˆ" : volume >= 80  ? "ğŸ”Š" : "ğŸ”‰"} ${volume < 0 ? "00" : volume}%"
    time))

(defwidget workspaces []
  (eventbox :onscroll "niri msg action focus-workspace-{}"
      (box :class "workspaces"
           :orientation "h"
           :space-evenly true
           :halign "start"
           :spacing 10
        (for workspace in workspaces
            (button 
                :onclick "niri msg action focus-workspace ${workspace.id}"
                :class {workspace.id == workspace_active ? "active" : ""}
                {workspace.name})
        ))))

(defwidget windows [] "")

(deflisten volume :initial "00"
  "scripts/monitor.sh 0.1 scripts/volume.sh") 

(defpoll time :interval "10s"
  "date '+%H:%M'")

(defvar workspaces "[]")
(defvar workspace_active "null")

(defwindow bar
  :monitor 0
  :windowtype "dock"
  :geometry (geometry :x "0%"
                      :y "0%"
                      :width "100%"
                      :height "10px"
                      :anchor "top center")
  :exclusive true
  (bar))

